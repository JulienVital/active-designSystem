{"version":3,"file":"InputText.stories-4356b0dc.js","sources":["../../src/components/Inputs/InputText/InputText.vue"],"sourcesContent":["<template>\n  <div :class=\"inputSize\">\n    <input\n      type=\"text\"\n      :class=\"['InputForm', inputSize]\"\n      :value=\"props.modelValue\"\n      @input=\"handlerChange\"\n      :placeholder=\"props.placeholder\"\n    />\n    <InputBorder />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport InputBorder from '../InputBorder.vue'\n\nconst inputSize = computed(() => ({\n  [`input--${props.size}`]: true\n}))\n\nconst props = defineProps({\n  /**\n   * Actual value to display\n   */\n  modelValue: {\n    type: String,\n    required: false,\n    default: ''\n  },\n  size: {\n    validator(value: string) {\n      // The value must match one of these strings\n      return ['small', 'medium', 'large'].includes(value)\n    },\n    required: false,\n    default: 'medium'\n  },\n  /**\n   * Actual value to display\n   */\n  placeholder: {\n    type: String,\n    required: false,\n    default: ''\n  }\n})\n\nconst emit = defineEmits<{\n  (e: 'update:modelValue', newValue: string): void\n}>()\n\nconst handlerChange = (event: Event) => {\n  const inputValue = (event.target as HTMLInputElement).value\n  emit('update:modelValue', inputValue)\n}\n</script>\n"],"names":["inputSize","computed","props","__props","emit","__emit","handlerChange","event","inputValue"],"mappings":"wbAiBM,MAAAA,EAAYC,EAAS,KAAO,CAChC,CAAC,UAAUC,EAAM,IAAI,EAAE,EAAG,EAC1B,EAAA,EAEIA,EAAQC,EA2BRC,EAAOC,EAIPC,EAAiBC,GAAiB,CAChC,MAAAC,EAAcD,EAAM,OAA4B,MACtDH,EAAK,oBAAqBI,CAAU,CAAA;;;;;;;;;;;;;;"}