{"version":3,"file":"InputNumber.stories-c2ccba76.js","sources":["../../src/components/Inputs/InputNumber/InputNumber.vue"],"sourcesContent":["<template>\n  <div :class=\"inputSize\">\n    <input\n      type=\"number\"\n      :class=\"['InputForm', inputSize]\"\n      :value=\"props.modelValue\"\n      :step=\"props.step\"\n      @input=\"handlerChange\"\n    />\n    <InputBorder />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport InputBorder from '../InputBorder.vue'\n\nconst props = defineProps({\n  /**\n   * Actual value to display\n   */\n  modelValue: {\n    type: Number,\n    required: false\n  },\n\n  /**\n   * Step increment/decrement value\n   */\n  step: {\n    type: Number,\n    required: false,\n    default: 1\n  },\n  /**\n   * Size of input\n   */\n  size: {\n    validator(value: string) {\n      // The value must match one of these strings\n      return ['small', 'medium', 'large'].includes(value)\n    },\n    required: false,\n    default: 'medium'\n  }\n})\nconst emit = defineEmits<{\n  (e: 'update:modelValue', newValue: number): void\n}>()\n\nconst inputSize = computed(() => ({\n  [`input--${props.size}`]: true\n}))\n\nconst handlerChange = (event: Event) => {\n  const inputValue = parseFloat((event.target as HTMLInputElement).value)\n  emit('update:modelValue', inputValue)\n}\n</script>\n"],"names":["props","__props","emit","__emit","inputSize","computed","handlerChange","event","inputValue"],"mappings":"gaAiBA,MAAMA,EAAQC,EA6BRC,EAAOC,EAIPC,EAAYC,EAAS,KAAO,CAChC,CAAC,UAAUL,EAAM,IAAI,EAAE,EAAG,EAC1B,EAAA,EAEIM,EAAiBC,GAAiB,CACtC,MAAMC,EAAa,WAAYD,EAAM,OAA4B,KAAK,EACtEL,EAAK,oBAAqBM,CAAU,CAAA;;;;;;;;;;;;;;;;;;"}